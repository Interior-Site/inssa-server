name: ci # workflow 이름
on: # event 발생 시점 정의
  push:
    branches:
      - main # main에 push할 때
  pull_request:
    branches: [ "*" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest # job을 수행하는 OS
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Repository로부터 CI 수행 서버로 코드를 내려받는 Action

      - name: Set up JDK 17
        uses: actions/setup-java@v3 # jdk를 다운 받고 캐싱해주는 Action
        with: # Action에 전달하는 input 정의
          java-version: '17'
          distribution: 'temurin' # jdk를 제공하는 vender사 이름

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          ./gradlew -version
          ./gradlew clean build -x test
          
      - name: Backend CI Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: ${{ success() }}
        with:
          title: ✅ Backend CI success ✅
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          color: 00FF00

      - name: Backend CI Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: ${{ failure() }}
        with:
          title: ❗️  Backend CI failed ❗️
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          color: FF0000